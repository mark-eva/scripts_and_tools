RDS ec3dev migration procedure

1. Create database RDS instance as per amazon rds doco


2. Create user and grant privs on source database
	
	 create user rds_pump identified by oracle;
	 grant create session, create table to rds_pump;
	 alter user rds_pump quota unlimited on users;
	 grant read, write on directory data_pump_dir to rds_pump;
	 grant execute on dbms_datapump to rds_pump;
	 grant exp_full_database to rds_pump;
	 
3. Get the list of Schemas that will be exported/imported from the source database
	
	SELECT LISTAGG(username,',') WITHIN GROUP (ORDER BY username)
	FROM dba_users WHERE username LIKE '%ENV' OR username LIKE 'APP%' OR
	username LIKE '%MGR%'
	 
	It should produce a list like the following:
	APPBPM,APPENV,APPQOSSYS,BPMMGR,CASEMGR,CONVERTMGR,DASHMGR,DBAMGR,DECMGR,ENVMGR,FOX5MGR,FOXMGR,IMPORTMGR,JAMESMGR,LOGMGR,MIGMGR,NOTIFYMGR,PORTALMGR,PROMOTEMGR,
	REDACTMGR,REPORTMGR,SAVEMGR,SCRAMGR,SECUREMGR,SERVICEMGR,TASKMGR,TESTMGR,TIMEMGR,XVIEWMGR
	
4. Export dumpfile
	a. Create a parameter easier file 
	   vim parfile
	   
	   userid=rds_pump/oracle 
	   directory=data_pump_dir 
       dumpfile=ec3dev1.dmp
       logfile=export_ec3dev1.log 
       schemas=APPBPM,APPENV,APPQOSSYS,BPMMGR,CASEMGR,CONVERTMGR,DASHMGR,DBAMGR,DECMGR,ENVMGR,FOX5MGR,FOXMGR,IMPORTMGR,JAMESMGR,LOGMGR,MIGMGR,NOTIFYMGR,PORTALMGR,PROMOTEMGR,REDACTMGR,REPORTMGR,SAVEMGR,SCRAMGR,SECUREMGR,SERVICEMGR,TASKMGR,TESTMGR,TIMEMGR,XVIEWMGR
	   
	b. Create a copy of sys.dba_objects. We will use this later on as a basis for comparison to ensure that we are not missing any objects
	   after the import completes
	   
	   conn dbamgr/dev
	   create table orig_dba_objects as select * from sys.dba_objects;
	   
	c.  Invoke Datapump export
		expdp parfile=parfile

5.	 Create a TNS entry pointing to RDS instance. On the the address entry add the endpoint provided in amazon rds
	a. Add an entry in tnsnames.ora
    	cd $ORACLE_HOME/network/admin
		vim tnsnames.ora
		   
    	Example:
    		EC3DEV2 =
    		 (DESCRIPTION =
    		   (ADDRESS_LIST =
    			 (ADDRESS = (PROTOCOL = TCP)(Host =  ec3dev2.cygkqyesi7nk.eu-west-2.rds.amazonaws.com )(Port = 1521))
    		   )
    		 (CONNECT_DATA =
    		   (SERVICE_NAME = EC3DEV2)
    		 )
    		)
			
	b. Test connection between source and target database 
    	tnsping ec3dev2
    	
    	Used TNSNAMES adapter to resolve the alias
    	Attempting to contact (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(Host = ec3dev2.cygkqyesi7nk.eu-west-2.rds.amazonaws.com)(Port = 1521))) (CONNECT_DATA = (SERVICE_NAME = EC3DEV2)))
    	OK (60 msec)
    	
6. Push the dumpfile to the Cloud
	a. Create a database link to the target DB instance
    
    create database link to_rds connect to rdsuser identified by "00.racl33"
    using '(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=ec3dev2.cygkqyesi7nk.eu-west-2.rds.amazonaws.com)(PORT=1521))(CONNECT_DATA=(SID=ec3dev2)))';
	
	b. Copy the dumpfile to the RDS DB instance (execute on the source database)
    
    	BEGIN
    		DBMS_FILE_TRANSFER.PUT_FILE(
    		source_directory_object       => 'DATA_PUMP_DIR',
    		source_file_name              => 'ec3dev1.dmp',
    		destination_directory_object  => 'DATA_PUMP_DIR',
    		destination_file_name         => 'ec3dev1.dmp', 
    		destination_database          => 'to_rds' 
    		);
    	END;
    	/ 
		
7. Create Required objects in RDS instance. Execute the script on the source database first then execute the ouput to rds instance
	
	a. Create tablespaces required for the target database. This produces the syntax that needs to be executed in RDS instance
	
	SELECT DISTINCT 'CREATE TABLESPACE '|| tablespace_name ||' DATAFILE SIZE 1G AUTOEXTEND ON NEXT 1G maxsize unlimited' || ';' t
	FROM dba_segments
	WHERE tablespace_name NOT LIKE 'SYS%' AND tablespace_name NOT LIKE 'UNDO%' AND tablespace_name != 'USERS';
	
	b. Create profiles 
	
	set heading off
	set feedback off
	set linesize 1000
	set trimspool on
	set verify off
	set termout off
	set embedded on
	set long 200000
	set pages 0
	SELECT DBMS_METADATA.GET_DDL('PROFILE', pr.name) || ';'ddl_string
	FROM (SELECT DISTINCT pi.name
	FROM sys.profname$ pi
	WHERE pi.name != 'DEFAULT') pr;
	
	
	c. Create APPENV user -- Only to be executed in RDS
	
	CREATE USER APPENV
	IDENTIFIED BY Fivoracle
	DEFAULT TABLESPACE TBSDATA
	TEMPORARY TABLESPACE TEMP
	PROFILE MGR_USER
	ACCOUNT UNLOCK;
	-- 4 System Privileges for APPENV
	GRANT ALTER SESSION TO APPENV;
	GRANT CREATE SESSION TO APPENV;
	GRANT CREATE SYNONYM TO APPENV;
	GRANT FLASHBACK ANY TABLE TO APPENV;
	-- 4 Tablespace Quotas for APPENV
	ALTER USER APPENV QUOTA UNLIMITED ON TBSBLOB;
	ALTER USER APPENV QUOTA UNLIMITED ON TBSCLOB;
	ALTER USER APPENV QUOTA UNLIMITED ON TBSDATA;
	ALTER USER APPENV QUOTA UNLIMITED ON TBSIDX;
	
8.  Invoke the Import procedure  (Execute from Source Database)
impdp rdsuser@ec3dev2 DUMPFILE=ec3dev1.dmp DIRECTORY=DATA_PUMP_DIR schemas=APPBPM,APPENV,BPMMGR,CASEMGR,CONVERTMGR,DASHMGR,DBAMGR,DECMGR,ENVMGR,FOX5MGR,FOXMGR,IMPORTMGR,JAMESMGR,LOGMGR,MIGMGR,NOTIFYMGR,PORTALMGR,PROMOTEMGR,REDACTMGR,REPORTMGR,SAVEMGR,SCRAMGR,SECUREMGR,SERVICEMGR,TASKMGR,TESTMGR,TIMEMGR,XVIEWMGR

	
	
	
	
	
	

		
	
    			